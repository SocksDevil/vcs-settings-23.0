package patches.projects

import jetbrains.buildServer.configs.kotlin.*
import jetbrains.buildServer.configs.kotlin.KubernetesCloudProfile
import jetbrains.buildServer.configs.kotlin.Project
import jetbrains.buildServer.configs.kotlin.kubernetesCloudProfile
import jetbrains.buildServer.configs.kotlin.projectFeatures.DockerRegistryConnection
import jetbrains.buildServer.configs.kotlin.projectFeatures.HashiCorpVaultConnection
import jetbrains.buildServer.configs.kotlin.projectFeatures.dockerRegistry
import jetbrains.buildServer.configs.kotlin.projectFeatures.hashiCorpVaultConnection
import jetbrains.buildServer.configs.kotlin.ui.*

/*
This patch script was generated by TeamCity on settings change in UI.
To apply the patch, change the root project
accordingly, and delete the patch script.
*/
changeProject(DslContext.projectId) {
    params {
        add {
            text("meow", "", allowEmpty = false)
        }
    }

    features {
        val feature1 = find<DockerRegistryConnection> {
            dockerRegistry {
                id = "PROJECT_EXT_35"
                name = "Docker Registry"
            }
        }
        feature1.apply {
        }
        val feature2 = find<HashiCorpVaultConnection> {
            hashiCorpVaultConnection {
                id = "hashicorpVaultConnection1"
                name = "HashiCorp Vault"
                url = "http://127.0.0.1:8200"
                authMethod = appRole {
                    roleId = "f3e75c6b-118b-48a1-97fc-6b8a69eb3bc3"
                    secretId = "credentialsJSON:a90c9e97-f71b-4571-bfff-24f0eb0db85b"
                }
                failOnError = false
            }
        }
        feature2.apply {
        }
        val feature3 = find<KubernetesCloudProfile> {
            kubernetesCloudProfile {
                id = "kube-5"
                name = "K8S Test"
                terminateIdleMinutes = 30
                apiServerURL = "https://6c60846089ad8c095bed3b18ff6d84a0.gr7.eu-west-1.eks.amazonaws.com"
                caCertData = "credentialsJSON:c77bc0a7-f461-4ca8-959b-ee5c8f6389b6"
                namespace = "executor-pods"
                authStrategy = token {
                    token = "credentialsJSON:fa92592e-ec16-4543-add0-1cdd4de87e5e"
                }
            }
        }
        feature3.apply {
            name = "K8S Test"
            terminateAfterBuild = true
            terminateIdleMinutes = 30
            apiServerURL = "https://6c60846089ad8c095bed3b18ff6d84a0.gr7.eu-west-1.eks.amazonaws.com"
            caCertData = "credentialsJSON:c77bc0a7-f461-4ca8-959b-ee5c8f6389b6"
            namespace = "executor-pods"
        }
    }
}
